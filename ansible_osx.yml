---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          adoptopenjdk/openjdk,
          fishtown-analytics/dbt,
          heroku/brew,
          homebrew/cask-versions,
          thoughtbot/formulae,
          weaveworks/tap,
        ]

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
          - dropbox
          - firefox
          - google-chrome
          - slack
          - sublime-text
          - itsycal
          - karabiner-elements
          - vlc
          - github
          - sourcetree
          - intellij-idea
          - iterm2
          - zoom
          - betterzip
          - beyond-compare
          - microsoft-remote-desktop
          - visual-studio-code
          - visualvm
          - vmware-horizon-client
          - gimp
          - elmedia-player
          - meld
          - whatsapp
          - shottr

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          'curl',
          'mas',
          'openssl' ,
          'unzip',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: "Create a default ZSH configuration"
      template:
        src: templates/.zshrc.j3
        dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Copy default karabiner-elements configuration"
      template:
        src: templates/karabiner.json
        dest: /Users/{{ lookup('env', 'USER') }}/.config/karabiner/karabiner.json
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.8.1

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - nodejs
        - python
      

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.10.0
        asdf global python 3.10.0
        pip3 install ansible
        asdf reshim python
